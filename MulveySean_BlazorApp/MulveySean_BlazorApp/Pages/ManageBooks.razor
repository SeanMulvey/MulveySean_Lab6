@page "/manageBooks"
@using MulveySean_BlazorApp.Data
@inject State State

<PageTitle>Manage Books</PageTitle>
<h1>Manage Books</h1>


<p>
    <h1>Book Title</h1>
    <input @bind="title" />
</p>

<p>
    <h1>Book Author</h1>
    <input @bind="author" />
</p>

<p>
    <h1>Book ISBN</h1>
    <input @bind="isbn" />
</p>




<button class="btn btn-primary" @onclick="AddBook">Add Book</button>
<button class="btn btn-primary" @onclick="EditBook">Edit Book</button>
<button class="btn btn-primary" @onclick="DeleteBook">Delete Book</button>
<button class="btn btn-primary" @onclick="ListBooks">List Books</button>

<p role="status">@updated</p>


<p hidden="@hideDelete">
    <div class="container">
        <p>Enter Book ID</p>

        <input @bind="deleteId" />
        <button class="btn btn-primary" @onclick="ConfirmDelete">Delete Book</button>
    </div>
</p>

<p hidden="@hideEdit">
    <div class="container">
        <p>Enter Book ID</p>
        <input @bind="editId" />
        <button class="btn btn-primary" @onclick="ConfirmEdit">Edit Book</button>




    </div>
</p>
<p hidden="@hideUpdate">
    <div class="container">

        <input @bind="title" />
        <input @bind="author" />
        <input @bind="isbn" />
        <button class="btn btn-primary" @onclick="Update">Update Book</button>
    </div>
</p>

<p hidden="@hideBookTable">
    <div class="container">
        <h3 class="p-3 text-center">Book List</h3>
        <table class="table table-striped table-bordered">
            <thead>
                <tr>
                    <th>Book ID</th>
                    <th>Title</th>
                    <th>Author</th>
                    <th>ISBN</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var book in books)
                {
                    <tr>
                        <td>@book.Id</td>
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        <td>@book.Isbn</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</p>



@code{

    List<Book> books = new List<Book>();
    string title;
    string author;
    string isbn;
    string currBook;
    string updated;
    int? deleteId;
    int? editId;
    bool hideDelete = true;
    bool hideBookTable = true;
    bool hideEdit = true;
    bool hideUpdate = true;
    int currentCount = 0;

    void AddBook()
    {
        int prevCount = books.Count;
        int? id = books.Any() ? books.Max(b => b.Id) + 1 : 1;
        books.Add(new Book { Id = id, Title = title, Author = author, Isbn = isbn });
        int currCount = books.Count;
        if (currCount > prevCount)
        {
            State.bookList = books;

            updated = "Book Added";
        }


    }
    void EditBook()
    {
        hideEdit = false;
    }
    void ConfirmEdit()
    {
        foreach (Book book in books)
        {
            if (book.Id == editId)
            {
                title = book.Title;
                author = book.Author;
                isbn = book.Isbn;

                hideEdit = true;
                hideUpdate = false;

            }
        }
    }
    void Update()
    {
        Book book = books.FirstOrDefault(u => u.Id == editId);
        books.Remove(book);
        books.Add(new Book { Id = editId, Title = title, Author = author, Isbn = isbn });
        State.bookList = books;
    }
    void DeleteBook()
    {
        hideDelete = false;
    }
    void ConfirmDelete()
    {
        foreach (Book book in books.ToList())
        {
            if (book.Id == deleteId)
            {

                try
                {
                    Book currBook = books.FirstOrDefault(u => u.Id == editId);
                    books.Remove(currBook);
                    State.bookList = books;
                    hideDelete = true;
                }
                catch (Exception e)
                {

                }


            }
        }
    }
    void ListBooks()
    {

        hideBookTable = false;
    }

}